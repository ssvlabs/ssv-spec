package testdoc

// ControllerSpecTest
const ControllerSpecTestType = "QBFT controller: validation of consensus state management and instance lifecycle"

// MsgSpecTest
const MsgSpecTestType = "QBFT message validation: testing message encoding, decoding, and structural integrity"

// MsgProcessingSpecTest
const MsgProcessingSpecTestType = "Message processing: validation of consensus message handling and state transitions"

// CreateMsgSpecTest
const CreateMsgSpecTestType = "Message creation: validation of consensus message construction and encoding"

// RoundRobinSpecTest
const RoundRobinSpecTestType = "Round robin proposer: validation of fair proposer selection algorithm"

// TimeoutSpecTest
const TimeoutSpecTestType = "Timeout: validation of round timeout handling and state transitions"

// Documentation for CommitTest
const CommitTestHappyFlowDoc = "Test a complete commit happy flow with proposal, prepare quorum, and commit quorum"
const CommitTestDuplicateSignersDoc = "Test processing of a commit message with duplicate signers"
const CommitTestForceStopDoc = "Test processing of a commit message when instance force stopped"
const CommitTestInvalidValCheckDoc = "Test processing of a commit message with an invalid value check, not expecting error as a commit depends on a proposal received which validates value"
const CommitTestNoCommitQuorumDoc = "Test processing of commit messages without creating a quorum"
const CommitTestCurrentRoundDoc = "Test processing of a commit message in the current round"
const CommitTestDuplicateMsgDoc = "Test processing of duplicate commit messages from the same signer"
const CommitTestFutureRoundDoc = "Test processing of a commit message with a future round, expecting error"
const CommitTestMultiSignerNoOverlapDoc = "Test processing of a multi signer commit message with no overlap, expecting error"
const CommitTestMultiSignerWithOverlapDoc = "Test processing of a multi signer commit message with overlap, expecting error"
const CommitTestNoPrepareQuorumDoc = "Test processing of commit messages without a prepare quorum"
const CommitTestPastRoundDoc = "Test processing of a commit message with a past round, expecting error"
const CommitTestPostCutoffDoc = "Test processing of a commit message when round >= cutoff, expecting error"
const CommitTestPostDecidedDoc = "Test processing of a commit message after instance decided"
const CommitTestSortedDecidedDoc = "Test the creation of the decided message that should have sorted signers"
const CommitTestUnknownSignerDoc = "Test processing of a commit message with an unknown signer, expecting error"
const CommitTestWrongData1Doc = "Test processing of a commit message with data != acceptedProposalData.Data, expecting error"
const CommitTestWrongData2Doc = "Test processing of a commit message with data != prepared data, expecting error"
const CommitTestWrongHeightDoc = "Test processing of a commit message with the wrong height, expecting error"
const CommitTestNoPrevAcceptedProposalDoc = "Test processing of a commit message without a previous accepted proposal"

// Documentation for Controller/Decided tests
const ControllerDecidedValidDoc = "Test a valid decided message with unique 2f+1 signers, expecting successful decision."
const ControllerDecidedWrongMsgTypeDoc = "Test a non-commit message with 2f+1 signers, expecting validation error."
const ControllerDecidedWrongSigDoc = "Test a single decided message received with a wrong signature, expecting validation error."
const ControllerDecidedLateDecidedBiggerQuorumDoc = "Test processing a decided message for a just decided instance with a bigger quorum, expecting the instance to remain decided."
const ControllerDecidedLateDecidedSmallerQuorumDoc = "Test processing a decided message for a just decided instance with a smaller quorum, expecting the instance to remain decided."
const ControllerDecidedMultiDecidedInstanceDoc = "Test deciding multiple instances with different heights, expecting each instance to be decided successfully."
const ControllerDecidedNoQuorumDoc = "Test decided message with less than unique 2f+1 signers, expecting validation error."
const ControllerDecidedPastInstanceDoc = "Test decided messages received for past instances, expecting multiple instances to be decided."
const ControllerDecidedUnknownSignerDoc = "Test a decided message with an unknown signer, expecting validation error."
const ControllerDecidedHasQuorumDoc = "Test decided message with unique 2f+1 signers, expecting successful decision."
const ControllerDecidedInvalidDoc = "Test decided message where msg.validate() fails, expecting validation error."
const ControllerDecidedInvalidFullDataDoc = "Test signed decided message with an invalid full data field, expecting validation error."
const ControllerDecidedInvalidValCheckDoc = "Test a decided message with invalid decided data that should pass validation since it's already decided."
const ControllerDecidedLateDecidedDoc = "Test processing a decided message for a just decided instance, expecting the instance to remain decided."
const ControllerDecidedCurrentInstancePastRoundDoc = "Test a decided message received for current running instance for a past round, expecting the instance to be decided."
const ControllerDecidedDuplicateMsgDoc = "Test processing duplicate decided messages, expecting only one instance to be decided."
const ControllerDecidedDuplicateSignersDoc = "Test a decided message with duplicate signers, expecting validation error."
const ControllerDecidedFutureInstanceDoc = "Test decided message received for future (not yet started) instance, expecting the instance to be decided."
const ControllerDecidedCurrentInstanceDoc = "Test a decided message received for current running instance, expecting the instance to be decided."
const ControllerDecidedCurrentInstanceFutureRoundDoc = "Test that a decided msg received for current running instance for a future round should be accepted"

// Documentation for controller/futuremsg tests
const ControllerFutureMsgValidDoc = "Test future message that is valid but not yet ready to be processed, expecting error."

// Documentation for Controller/Latemsg tests
const ControllerLateMsgFullFlowAfterDecidedDoc = "Test a decided message for round 1 followed by a full proposal, prepare, commit flow for round 2, expecting error."
const ControllerLateMsgLateCommitPastInstanceDoc = "Test processing commit message for a previously decided instance, expecting error."
const ControllerLateMsgLateCommitPastRoundDoc = "Test processing late commit message for an instance which just decided for a round less than decided round, expecting error."
const ControllerLateMsgLateCommitDoc = "Test processing late commit message for an instance which just decided, expecting error."
const ControllerLateMsgLateRoundChangePastRoundDoc = "Test processing late round change message for an instance which just decided for a round less than decided round, expecting error."
const ControllerLateMsgLateProposalPastInstanceDoc = "Test processing proposal message for a previously decided instance, expecting error."
const ControllerLateMsgLateProposalPastInstanceNonDuplicateDoc = "Test processing non-duplicated proposal message for a previously decided instance, expecting error."
const ControllerLateMsgLateProposalPastRoundDoc = "Test processing late proposal message for an instance which just decided for a round less than decided round, expecting error."
const ControllerLateMsgLateRoundChangeDoc = "Test processing late round change message for an instance which just decided, expecting error."
const ControllerLateMsgLateRoundChangePastInstanceDoc = "Test processing round change message for a previously decided instance, expecting error."
const ControllerLateMsgLatePrepareDoc = "Test processing late prepare message for an instance which just decided, expecting error."
const ControllerLateMsgLatePreparePastInstanceDoc = "Test processing prepare message for a previously decided instance, expecting error."
const ControllerLateMsgLatePreparePastRoundDoc = "Test processing late prepare message for an instance which just decided for a round less than decided round, expecting error."
const ControllerLateMsgLateProposalDoc = "Test processing late proposal message for an instance which just decided, expecting error."

// Documentation for Controller/ProcessMsg tests
const ControllerProcessMsgBroadcastedDecidedDoc = "Test broadcasting decided message, expecting successful broadcast."
const ControllerProcessMsgSingleConsensusMsgDoc = "Test processing a single consensus message."
const ControllerProcessMsgErrorDoc = "Test processing a message that returns an error, expecting validation error."
const ControllerProcessMsgFullDecidedDoc = "Test processing messages and first time deciding, expecting successful decision."
const ControllerProcessMsgInvalidIdentifierDoc = "Test processing a message with the wrong identifier, expecting validation error."
const ControllerProcessMsgNoInstanceRunningDoc = "Test processing message for height with no running instance, expecting error."

// Documentation for Messages tests
const MessagesSignedMsgMultiSignersDoc = "Test signed message with multiple signers for QBFT message validation."
const MessagesSignedMsgNoSignersDoc = "Test signed message with no signers, expecting validation error."
const MessagesSignedMsgSignerZeroDoc = "Test signed message with signer ID 0, which is not allowed."
const MessagesSSZMarshalingDoc = "Test valid SSZ marshaling of a signed QBFT message with justifications."
const MessagesUnmarshalJustificationDoc = "Test unmarshalling justifications from QBFT proposal message."
const MessagesValidHashDataRootDoc = "Test a valid hash data root for QBFT message validation."
const MessagesRoundChangeJustificationUnmarshalingDoc = "Test unmarshalling round change justifications from QBFT proposal message."
const MessagesRoundChangePreparedDoc = "Test round change message with prepared value and justifications."
const MessagesSignedMsgDuplicateSignersDoc = "Test signed message with duplicate signers, expecting validation error."
const MessagesSignedMsgEncodingDoc = "Test encoding of signed QBFT message with justifications."
const MessagesPrepareDataEncodingDoc = "Test encoding of prepare data for QBFT message validation."
const MessagesPrepareJustificationUnmarshalingDoc = "Test unmarshalling prepare justifications from QBFT proposal message."
const MessagesProposeDataEncodingDoc = "Test encoding of proposal data with justifications."
const MessagesRCDataEncodingDoc = "Test encoding of round change data with justifications."
const MessagesRCNotPreparedJustificationsDoc = "Test valid justified round change message without previously prepared justifications."
const MessagesRCPrevPreparedJustificationsDoc = "Test valid justified round change message with previously prepared justifications."
const MessagesRootDoc = "Test GetRoot method on signed QBFT message with justifications."
const MessagesMarshalJustificationDoc = "Test marshalling round change and prepare justifications for QBFT proposal message."
const MessagesMarshalJustificationWithFullDataDoc = "Test marshalling justifications with full data, which should be omitted during marshalling."
const MessagesMarshalJustificationWithoutFullDataDoc = "Test marshalling justifications without full data for QBFT proposal message."
const MessagesMsgNilIdentifierDoc = "Test message with nil identifier, expecting validation error."
const MessagesMsgNonZeroIdentifierDoc = "Test message with empty identifier, expecting validation error."
const MessagesMsgTypeUnknownDoc = "Test message with unknown/invalid message type, expecting validation error."
const MessagesCreateRoundChangePrevPreparedDoc = "Test creating a round change message when previously prepared with justifications."
const MessagesInvalidHashDataRootDoc = "Test an invalid hash data root for QBFT message validation."
const MessagesInvalidPrepareJustificationUnmarshalingDoc = "Test unmarshalling invalid prepare justifications, expecting validation error during message validation."
const MessagesInvalidRoundChangeJustificationUnmarshalingDoc = "Test unmarshalling invalid round change justifications, expecting validation error during message validation."
const MessagesCreateRoundChangeDoc = "Test creating a round change message when not previously prepared."
const MessagesCreateRoundChangeNoJustificationQuorumDoc = "Test creating a round change message that was previously prepared but failed to extract a justification quorum, resulting in an unjustified round change."
const MessagesCreatePrepareDoc = "Test creating a prepare message for QBFT consensus."
const MessagesCreateProposalDoc = "Test creating a proposal message when not previously prepared."
const MessagesCreateProposalNotPrevPreparedDoc = "Test creating a proposal message for non-first round when not previously prepared, with round change justifications."
const MessagesCreateProposalPrevPreparedDoc = "Test creating a proposal message when previously prepared with round change and prepare justifications."
const MessagesCommitDataEncodingDoc = "Test encoding of commit data for QBFT message validation."
const MessagesCreateCommitDoc = "Test creating a commit message for QBFT consensus."

// Documentation for Prepare tests
const PrepareUnknownSignerDoc = "Test prepare message from a signer not in the committee, expecting validation error."
const PrepareWrongDataDoc = "Test prepare message with data different from the accepted proposal data, expecting validation error."
const PrepareWrongHeightDoc = "Test prepare message received with incorrect height, expecting validation error."
const PrepareMultiSignerDoc = "Test prepare message with multiple signers, expecting validation error since only one signer is allowed."
const PrepareNoPreviousProposalDoc = "Test prepare message without receiving a previous proposal, expecting validation error."
const PrepareOldRoundDoc = "Test prepare message for a round less than the current state round, expecting validation error due to outdated round."
const PreparePostCutoffDoc = "Test processing prepare message when the round is greater than or equal to the cutoff, expecting the instance to stop processing messages."
const PreparePostDecidedDoc = "Test processing prepare message after the instance has already decided, expecting no additional output."
const PrepareQuorumTriggeredTwiceDoc = "Test triggering prepare quorum twice by sending more than 2f+1 prepare messages, expecting commit message broadcast."
const PrepareQuorumTriggeredTwiceLateCommitDoc = "Test triggering prepare quorum twice by sending more than 2f+1 prepare messages, with commit message processed after the second prepare quorum, expecting commit message broadcast."
const PrepareDuplicateMsgDoc = "Test processing of duplicate prepare messages from the same signer"
const PrepareForceStopDoc = "Test processing prepare message after instance is force stopped, expecting error."
const PrepareFutureRoundDoc = "Test prepare message for a round greater than the current state round, expecting validation error."
const PrepareHappyFlowDoc = "Test a complete prepare happy flow with proposal and prepare quorum"

// Documentation for Proposal tests
const ProposalPreparedPreviouslyJustificationDoc = "Test proposal for round > 1 that was prepared previously with valid quorum of round change messages justification, expecting full consensus flow."
const ProposalPreparedPreviouslyNoPrepareJustificationQuorumDoc = "Test proposal for round > 1 that was prepared previously but lacks quorum of prepare messages in justification, expecting validation error."
const ProposalPreparedPreviouslyNoRCJustificationQuorumDoc = "Test proposal for round > 1 that was prepared previously but lacks quorum of round change messages in justification, expecting validation error."
const ProposalSecondProposalForRoundDoc = "Test second proposal from the same signer for the current round when a proposal is already accepted, expecting validation error."
const ProposalUnknownSignerDoc = "Test proposal message from a signer not in the committee, expecting validation error."
const ProposalWrongHeightDoc = "Test proposal message received with incorrect height, expecting validation error."
const ProposalWrongProposerDoc = "Test proposal by a node that is not the designated proposer for the current round, expecting validation error."
const ProposalPreparedPreviouslyDuplicatePrepareQuorumDoc = "Test proposal for round > 1 that was prepared previously with quorum of prepare messages but contains duplicate messages, expecting prepare message broadcast."
const ProposalPreparedPreviouslyDuplicateRCMsgDoc = "Test proposal for round > 1 that was prepared previously with round change messages but contains duplicates, expecting validation error due to no quorum."
const ProposalPreparedPreviouslyDuplicateRCQuorumDoc = "Test proposal for round > 1 that was prepared previously with quorum of round change messages but contains duplicate messages, expecting prepare message broadcast."
const ProposalPastRoundPrevNotPreparedDoc = "Test proposal for a past round that was not previously prepared, expecting validation error due to outdated round."
const ProposalPastRoundPrevPreparedDoc = "Test proposal for a past round that was previously prepared, expecting validation error due to outdated round."
const ProposalPostCutoffDoc = "Test processing proposal message when the round is greater than or equal to the cutoff, expecting the instance to stop processing messages."
const ProposalPostDecidedDoc = "Test processing proposal message after the instance has already decided, expecting validation error."
const ProposalPostPreparedDoc = "Test processing proposal message after the instance has already prepared, expecting validation error."
const ProposalPreparedPreviouslyDuplicatePrepareMsgDoc = "Test proposal for round > 1 that was prepared previously with prepare messages but contains duplicates, expecting validation error due to no quorum."
const ProposalInvalidRCJustificationDoc = "Test proposal for round > 1 that was not prepared previously but contains invalid round change justification with mismatched signer ID, expecting validation error."
const ProposalInvalidRCJustificationPreparedDoc = "Test proposal for round > 1 that was prepared previously but contains invalid round change justification with mismatched signer ID, expecting validation error."
const ProposalInvalidValueCheckDoc = "Test proposal that fails the value check validation, expecting validation error."
const ProposalJustificationNotHighestDoc = "Test proposal for round > 1 with round change justification containing prepare messages at different heights, but the prepare justification is not the highest, expecting validation error."
const ProposalMultiSignerDoc = "Test proposal message with multiple signers, expecting validation error since only one signer is allowed."
const ProposalNoRCJustificationDoc = "Test proposal for round > 1 that was not prepared previously and lacks quorum of round change messages in justification, expecting validation error."
const ProposalNotPreparedPreviouslyJustificationDoc = "Test proposal for round > 1 that was not prepared previously, with valid round change justification, expecting prepare message broadcast."
const ProposalFirstRoundJustificationDoc = "Test proposal justification for the first round, verifying that the proposer is correct and expecting prepare message broadcast."
const ProposalForceStopDoc = "Test processing proposal message after instance is force stopped, expecting error."
const ProposalFutureRoundDoc = "Test proposal for a future round when a proposal is already accepted for the current round, expecting prepare message broadcast and round advancement."
const ProposalFutureRoundPrevNotPrepareDoc = "Test proposal for a future round when currently not prepared, expecting prepare message broadcast and round advancement."
const ProposalInvalidFullDataDoc = "Test proposal message with invalid full data field where hash of full data does not equal the root, expecting validation error."
const ProposalInvalidPrepareJustificationRoundDoc = "Test proposal for round > 1 that was prepared previously but contains prepare justification with round different from the highest prepared round, expecting validation error."
const ProposalInvalidPrepareJustificationValueDoc = "Test proposal for round > 1 that was prepared previously but contains prepare justification with value different from the highest prepared value, expecting validation error."
const ProposalDifferentJustificationDoc = "Test proposal for round > 1 that was prepared previously with round change justification containing prepare messages at different heights, testing the highest prepared calculation."
const ProposalDuplicateMsgDifferentRootDoc = "Test duplicate proposal message processing where the second message has a different root value, expecting validation error."
const ProposalDuplicateMsgDoc = "Test processing of duplicate proposal messages from the same signer"
const ProposalDuplicateRCMsgDoc = "Test proposal for round > 1 that was not prepared previously with round change messages but contains duplicates, expecting validation error due to no quorum."

// Documentation for Proposer tests
const ProposerFourOperatorsDoc = "Test round-robin proposer selection for a 4-member committee across multiple heights and rounds."
const ProposerSevenOperatorsDoc = "Test round-robin proposer selection for a 7-member committee across multiple heights and rounds."
const ProposerTenOperatorsDoc = "Test round-robin proposer selection for a 10-member committee across multiple heights and rounds."
const ProposerThirteenOperatorsDoc = "Test round-robin proposer selection for a 13-member committee across multiple heights and rounds."

// Documentation for RoundChange tests
const RoundChangePartialQuorumDoc = "Test round change with partial quorum, checks timer state and output message."
const RoundChangeUnknownSignerDoc = "Test round change message with a signer not in the committee, expecting validation error."
const RoundChangeValidJustificationDoc = "Test round change with valid quorum justification, leading to proposal broadcast."
const RoundChangeWrongHeightDoc = "Test round change message with invalid height, expecting validation error."
const RoundChangeZeroSignerDoc = "Test round change message with signer ID 0, expecting validation error."
const RoundChangeQuorumNotPreparedDoc = "Test round change quorum for non-prepared state, leading to proposal broadcast."
const RoundChangeQuorumNotTriggeredTwiceDoc = "Test that after a round change quorum triggers a proposal, further round change messages do not trigger another proposal."
const RoundChangeQuorumNotTriggeredTwiceJustificationIgnoredDoc = "Test that after a round change quorum triggers a proposal, further round change messages with justifications are ignored and do not trigger another proposal."
const RoundChangeQuorumOrder1Doc = "Test round change quorum messages in different order (liveness property)."
const RoundChangeQuorumOrder2Doc = "Test round change quorum messages in a different order (liveness property, order 2)."
const RoundChangeQuorumPreparedDoc = "Test round change messages for prepared state, leading to proposal broadcast."
const RoundChangeAfterProposalDoc = "Test round change messages after previous quorum and proposal acceptance, followed by another round change."
const RoundChangePastRoundDoc = "Test round change msg with past round, expecting error."
const RoundChangePeerPreparedDoc = "Test round change quorum where only one peer is prepared, expecting proposal broadcast with correct justifications."
const RoundChangePeerPreparedDifferentHeightsDoc = "Test round change quorum where peers are prepared on different heights, expecting proposal broadcast with justifications from the correct height."
const RoundChangePostCutoffDoc = "Test processing a round change message when the round is greater than or equal to the cutoff, expecting the instance to stop processing messages."
const RoundChangeQuorumMsgNotPreparedDoc = "Test liveness scenario where the round change message that completes quorum is not previously prepared, which can cause a liveness issue with proposal justification."
const RoundChangeJustificationPastRoundDoc = "Test quorum of round change messages for a past round, expecting error due to outdated round."
const RoundChangeJustificationWrongRoundDoc = "Test round change justification with wrong round, expecting error."
const RoundChangeMultiSignerDoc = "Test round change message with multiple signers, expecting validation error since only one signer is allowed."
const RoundChangeNonUniqueSignerDoc = "Test round change message with non-unique signer IDs, expecting validation error."
const RoundChangeNotProposerDoc = "Test justified round change where the node is not the proposer, expecting no proposal broadcast."
const RoundChangeForceStopDoc = "Test round change message processing after instance is force stopped, expecting error."
const RoundChangeHappyFlowDoc = "Test a complete round change happy flow with round change quorum, proposal, prepare, and commit"
const RoundChangeJustificationDuplicateMsgDoc = "Test round change justification with duplicate messages, should not result in a justification quorum."
const RoundChangeJustificationInvalidRoundDoc = "Test round change justification with prepared round greater than message round, expecting error."
const RoundChangeJustificationInvalidSigDoc = "Test round change justification with an invalid signature, expecting signature verification error."
const RoundChangeJustificationMultiSignersDoc = "Test round change justification with a prepare message signed by multiple signers, expecting error."
const RoundChangeJustificationNoQuorumDoc = "Test round change justification with no quorum, expecting error."
const RoundChangeDuplicateMsgQuorumPreparedRCFirstDoc = "Test duplicate round change message where the previously prepared message is received first, followed by enough messages to reach quorum and trigger proposal broadcast."
const RoundChangeEmptySignersDoc = "Test round change message with no signers, expecting validation error."
const RoundChangeF1DifferentFutureRoundsDoc = "Test f+1 speedup scenario with one round change message previously prepared, expecting round to advance and proposal to be broadcast."
const RoundChangeF1DifferentFutureRoundsNotPreparedDoc = "Test f+1 speedup scenario where no previous round was prepared, expecting round to advance to the lowest future round received."
const RoundChangeF1DuplicateSignerDoc = "Test round change with f+1 duplicate signers, should not accept."
const RoundChangeF1DuplicateSignerNotPreparedDoc = "Test that f+1 speedup is not accepted for duplicate signer when not previously prepared, expecting no round advancement."
const RoundChangeF1SpeedupDoc = "Test catching up to higher rounds via f+1 speedup, where other peers are all at the same round."
const RoundChangeF1SpeedupPrevPreparedDoc = "Test catching up to higher rounds via f+1 speedup, with one peer previously prepared and others at the same round."
const RoundChangeDuplicateMsgDoc = "Test duplicate round change messages: first is processed, second is ignored."
const RoundChangeDuplicateMsgQuorumDoc = "Test duplicate round change message for a signer, followed by enough messages to reach quorum and trigger proposal broadcast."

// Documentation for StartInstance tests
const StartInstanceEmptyValueDoc = "Test starting a new QBFT instance with an empty value, expecting value validation error."
const StartInstanceEqualHeightNoRunningInstanceDoc = "Test starting a new QBFT instance for the current height when no instance is running."
const StartInstanceEqualHeightRunningInstanceDoc = "Test starting a new QBFT instance for the current height when an instance is already running, expecting error."
const StartInstanceFirstHeightDoc = "Test starting the very first QBFT instance and timer state."
const StartInstanceInvalidValueDoc = "Test starting a new QBFT instance with an invalid value, expecting value validation error."
const StartInstanceLowerHeightDoc = "Test starting a new QBFT instance with a lower height than the previous instance, expecting error."
const StartInstanceNilValueDoc = "Test starting a new QBFT instance with a nil value, expecting value validation error."
const StartInstancePostFutureDecidedDoc = "Test starting a new QBFT instance after a future decided message, then attempting to start with a past height."
const StartInstancePrevDecidedDoc = "Test starting a new QBFT instance when the previous instance has already decided."
const StartInstancePrevNotDecidedDoc = "Test starting a new QBFT instance when the previous instance has not decided."
const StartInstanceValidDoc = "Test starting a new QBFT instance with valid input value and timer state."

// Documentation for MsgProcessing tests
const MsgProcessingHappyFlowDoc = "Test a complete QBFT happy flow from proposal to decision with 4 operators"
const MsgProcessingHappyFlowSevenOperatorsDoc = "Test a complete QBFT happy flow from proposal to decision with 7 operators"
const MsgProcessingHappyFlowTenOperatorsDoc = "Test a complete QBFT happy flow from proposal to decision with 10 operators"
const MsgProcessingHappyFlowThirteenOperatorsDoc = "Test a complete QBFT happy flow from proposal to decision with 13 operators"

// Documentation for Timeout tests
const TimeoutRound1Doc = "Test UponRoundTimeout for round 1, checks state transition and broadcasted round change message."
const TimeoutRound2Doc = "Test UponRoundTimeout for round 2, checks state transition and broadcasted round change message."
const TimeoutRound3Doc = "Test UponRoundTimeout for round 3, checks state transition and broadcasted round change message."
const TimeoutRound5Doc = "Test UponRoundTimeout for round 5, checks state transition and broadcasted round change message."
const TimeoutRound15Doc = "Test UponRoundTimeout for round 15, checks that instance stops processing timeouts after a high round."
